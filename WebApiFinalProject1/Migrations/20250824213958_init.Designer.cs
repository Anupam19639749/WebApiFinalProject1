// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiFinalProject1.Data;

#nullable disable

namespace WebApiFinalProject1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250824213958_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiFinalProject1.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "Great write-up!",
                            IsApproved = true,
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "Very helpful, thanks!",
                            IsApproved = true,
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "Looks amazing, Priya!",
                            IsApproved = true,
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "Now I am hungry 😂",
                            IsApproved = true,
                            PostId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlatformPosted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Category = "Tech",
                            Content = "Content about .NET 8",
                            CreatedAt = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlatformPosted = "Reddit",
                            Title = "Getting Started with .NET 8",
                            UserId = 1
                        },
                        new
                        {
                            PostId = 2,
                            Category = "Travel",
                            Content = "Travel diary content",
                            CreatedAt = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlatformPosted = "Instagram",
                            Title = "My Trip to Manali",
                            UserId = 2
                        },
                        new
                        {
                            PostId = 3,
                            Category = "Food",
                            Content = "Food blog content",
                            CreatedAt = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlatformPosted = "Facebook",
                            Title = "Best Street Foods in Delhi",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            Bio = "Tech enthusiast",
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Anupam",
                            LastName = "Agrawal",
                            Location = "India",
                            UserId = 1
                        },
                        new
                        {
                            ProfileId = 2,
                            Bio = "Traveler and blogger",
                            DateOfBirth = new DateTime(1998, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Priya",
                            LastName = "Sharma",
                            Location = "India",
                            UserId = 2
                        },
                        new
                        {
                            ProfileId = 3,
                            Bio = "Food lover",
                            DateOfBirth = new DateTime(1995, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Rahul",
                            LastName = "Verma",
                            Location = "India",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = "R001",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = "R002",
                            RoleName = "Editor"
                        },
                        new
                        {
                            RoleId = "R003",
                            RoleName = "Viewer"
                        });
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "anupam@example.com",
                            IsActive = true,
                            PasswordHash = "hashed1",
                            RoleId = "R001",
                            Username = "anupam"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "priya@example.com",
                            IsActive = true,
                            PasswordHash = "hashed2",
                            RoleId = "R002",
                            Username = "priya"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "rahul@example.com",
                            IsActive = true,
                            PasswordHash = "hashed3",
                            RoleId = "R003",
                            Username = "rahul"
                        });
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Comment", b =>
                {
                    b.HasOne("WebApiFinalProject1.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiFinalProject1.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Post", b =>
                {
                    b.HasOne("WebApiFinalProject1.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Profile", b =>
                {
                    b.HasOne("WebApiFinalProject1.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("WebApiFinalProject1.Models.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.User", b =>
                {
                    b.HasOne("WebApiFinalProject1.Models.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApiFinalProject1.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
